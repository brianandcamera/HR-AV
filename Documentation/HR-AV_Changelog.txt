--------------------
COMMIT v0.9.7 - 11/23/2019

-v0.9.7.
-Working on implementing HRAV account usage and password maintanence.
-Working on getting real-time-protection implemented.
-Trying to advance all fronts and keep it all fresh in my mind at the same time. 
-Look for ways to improve workflow efficiency.
-Files are already organized but development process is rather sloppy. Need to think about automating it more.

--------------------
COMMIT - 11/22/2019
v0.9.6 - Tidying up. Improved installation process.

-v0.9.6.
-Start reworking enumeratesubdirs() in Scan-Core.
-Add startup mode.
-Improve installation wizard.
-Disable auto-restart after installation, as it doesn't seem to work properly anymore.
-Add an option during installation to enable automatic startup when Windows boots.
-Add .ico icon file for shortcuts.

--------------------
COMMIT - 11/22/2019
v0.9.5 - Scanning is almost functional!

-v0.9.5.
-Scanner works, just need to work on controlling output.
-Thread manager seems to work.
-Enumeratesubdirs does not seem to work.
-Definately needs work.
-Why is it not restarting as PAExec?
-Also changed the installation wizard to stop restarting automatically, as the start path still remains the installationloc and winds up using the wrong scripts and binaries in Scan-Core.php.

--------------------
COMMIT - 11/20/2019
v0.9.4 - Working on UI, building scanner pages.

-v0.9.4.
-Working on the UI HTML.
-Building out the pages.
-Fixed a typo in the installation wizard in App-Core.
-Fix paths in scanner pages.
-Made Javascript for incrementing/decrementing/validating priority input.

--------------------
COMMIT - 11/17/2019
v0.9.3.9 - Fixed Scan-Core syntax. Working on UI.

-v0.9.3.9.
-Fixed the bugs in Scan-Core.vbs so the syntax doesn't get hung up anymore.
-Continuing to figure out scanner pages. Going to need to do a lot of javascript.
-I think it might be a one-laptop-speciific problem I'm having, but the installation wizard doesn't work on this machine anymore. It works on others. I think it's permissions related to this box only.
-Keep working on UI. 
-Start thinking about making settings work and doing something for a dashboard on. the homepage as well. 
-Draw some sketches!
-Need to add a recursive option to the folder scanner page HTML and back-end functions.
--------------------

--------------------
COMMIT - 11/17/2019
v0.9.3.8 - Making UI elements for scanners!

-v0.9.3.8
-Made lots more functions, mostly to tie the UI to the backend scanning functionality.
-Starting to work on scanner pages.
-Need to try running it again soon to work out all the syntax errors. I'm sure there are a bunch!
--------------------

--------------------
COMMIT - 11/14/2019
v0.9.3.7 - Update scanCore.php to v0.5. Add -nr argument (disable recursion).

-v0.9.3.7.
-Update scanCore.php to v0.5. 
-Added a command line argument to disable recursion.
-Use -nr or -norecursion to force DISABLE recursive scanning of subdirectories (only a parent target directory will be scanned).
-Use -r or -recursion to force ENABLE recursive scanning.
-Specifying recursion is not required because it is implied, but it helps write robust automation tools. If you specify recursion and no recursion via typo somehow, norecursion always takes precidence. That should limit self-inflicted ddos's after drunken typos.
--------------------

--------------------
COMMIT - 11/14/2019
v0.9.3.6 - Add logging to recently created thread handler.

-v9.9.3.6.
-Add logging to the thread / worker manager.
-Remove the concept of a "requestMoreWorkers()" function. It shouldn't be required if scanning prep is done properly and creates a huge security risk of arbitrary code execution. Everything is sanitized, but still why allow unforseen execution? Do better hueristics beforehand.
-Add a sleeper to pace the thread manager. Now it won't DDoS the host. Was pretty much a fork bomb before. >D
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.3.5 - Still working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.3.5.
-Still working on threads, but finally calling out to the binary directory.
-Just realized, not using bootstrap().
-Either way, pretty happy.
-Need to modify scanCore repo to support the -nr argument to disable resursion.
-This thread manager should determine how much RAM to use, how much work there is, and then be able to start workers.
-To stop creating more workers we need to develop something.
-Maybe we can detect memory remaining every OTHER worker creation loop?
-Come up with a solution to that!
-There are tons of syntax errors because this laptop needs a format and I'm unable to create a suitable test environment.
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.2 - Still working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.2.
-Still Working on supporting functions for the thread manager.
-Continue adding code to exempt inections based on an exemption list.
-Created the code to define the path to the exemptionlist.
-Added a directory for the exemptionlist. This is in scan-core and ui-core.
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.1 - Still working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.1.
-Still Working on supporting functions for the thread manager.
-Commenting as I go this time.
-Added code to exempt inections based on an exemption list.
-Still need to create the code to define the path to the exemptionlist.
-Need to add a directory for the exemptionlist. This maybe should go into appcore instead of scancore?
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.0 - Working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.0.
-Working on supporting functions for the thread manager.
-Commented a lot of code.
--------------------

--------------------
COMMIT - 10/2/2019
v0.8.9 - Working on ScanCore.vbs. 

-v0.8.9.
-The ScanCore.vbs is going to be a thread handler for the various scanners and scanning modes of HR-AV.
-It will run scanCore.php as well as other scanners, as they are developed.
-It needs to be standalone because it's execution could continue for a looooong time.
-Working on the functions it needs. Copied the generic ones from RealTime-Core.vbs.
--------------------

--------------------
COMMIT - 10/2/2019
v0.8.8 - ScanCore to v0.1. 

-v0.8.8.
-ScanCore to v0.1.
-Made ScanCore a true PHP CLI application!
-Still needs testing and tweaking, no doubt.
-Suppports file-path, memorylimit, chunksize, debug, & verbose arguments. 
-Perfect for running with a worker-manager!
--------------------

--------------------
COMMIT - 10/1/2019
v0.8.7 - Working on scanCore.php.

-v0.8.7.
-Working on the single-threaded PHP scanner worker.
-This script will be called asynchronously via VBS from the main application and managed as worker processes.
-Perfect for high performance concurrent scanning! PHP is fast in this arena. 
-My gut tells me it's faster than VBS or Python as a single thread.
-That means we can run lots of threads!
-It also means we can use the same ScanCore.php script for scanning pretty much every directory on the machine. We just scale the number of threads with the workload.
--------------------

--------------------
COMMIT - 9/24/2019
v0.8.6 - Working on settings page.

-v0.8.6.
-Working on settings page layout.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.5 - Working on triggers for RTP. 

-v0.8.5.
-Working on triggers for RTP.
-I wish there was a better way to trigger tasks, like a loop similar to the way services are run.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.4 - Designed config.vbs in a more readable way. Added RTP engries.

-v0.8.4. 
-Changed the format of config.vbs a bit so that we can incorporate more information about each entry.
-Added entries for RTP tasks and services.
-Need to implement the tasks and services in RTP from config.vbs.
-A placeholder commit so I don't lose any of this stuff.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.3 - Working on RTP, getting closer to firing due tasks.

-v0.8.3.
-Real-Time-Protection should be pretty well standalone at this point.
-It detects when the main application is no longer running, and if "runInBackground" config entry is not set it will kill itself and all running tasks.
-Looking for a creative way to make a systray icon in VBS. Might have to have a tiny handler for this in Python. 
-Getting closer to implementing settings. Going to hard-code timers for the real-time core due tasks next. Eventually we can move on to implementing the settings.hta page.
--------------------