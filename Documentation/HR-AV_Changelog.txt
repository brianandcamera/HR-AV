--------------------
COMMIT - 11/7/2019
v0.9.2 - Still working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.2.
-Still Working on supporting functions for the thread manager.
-Continue adding code to exempt inections based on an exemption list.
-Created the code to define the path to the exemptionlist.
-Added a directory for the exemptionlist. This is in scan-core and ui-core.
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.1 - Still working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.1.
-Still Working on supporting functions for the thread manager.
-Commenting as I go this time.
-Added code to exempt inections based on an exemption list.
-Still need to create the code to define the path to the exemptionlist.
-Need to add a directory for the exemptionlist. This maybe should go into appcore instead of scancore?
--------------------

--------------------
COMMIT - 11/7/2019
v0.9.0 - Working on Scan-Core.vbs supporting functions for thread handler.

-v0.9.0.
-Working on supporting functions for the thread manager.
-Commented a lot of code.
--------------------

--------------------
COMMIT - 10/2/2019
v0.8.9 - Working on ScanCore.vbs. 

-v0.8.9.
-The ScanCore.vbs is going to be a thread handler for the various scanners and scanning modes of HR-AV.
-It will run scanCore.php as well as other scanners, as they are developed.
-It needs to be standalone because it's execution could continue for a looooong time.
-Working on the functions it needs. Copied the generic ones from RealTime-Core.vbs.
--------------------

--------------------
COMMIT - 10/2/2019
v0.8.8 - ScanCore to v0.1. 

-v0.8.8.
-ScanCore to v0.1.
-Made ScanCore a true PHP CLI application!
-Still needs testing and tweaking, no doubt.
-Suppports file-path, memorylimit, chunksize, debug, & verbose arguments. 
-Perfect for running with a worker-manager!
--------------------

--------------------
COMMIT - 10/1/2019
v0.8.7 - Working on scanCore.php.

-v0.8.7.
-Working on the single-threaded PHP scanner worker.
-This script will be called asynchronously via VBS from the main application and managed as worker processes.
-Perfect for high performance concurrent scanning! PHP is fast in this arena. 
-My gut tells me it's faster than VBS or Python as a single thread.
-That means we can run lots of threads!
-It also means we can use the same ScanCore.php script for scanning pretty much every directory on the machine. We just scale the number of threads with the workload.
--------------------

--------------------
COMMIT - 9/24/2019
v0.8.6 - Working on settings page.

-v0.8.6.
-Working on settings page layout.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.5 - Working on triggers for RTP. 

-v0.8.5.
-Working on triggers for RTP.
-I wish there was a better way to trigger tasks, like a loop similar to the way services are run.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.4 - Designed config.vbs in a more readable way. Added RTP engries.

-v0.8.4. 
-Changed the format of config.vbs a bit so that we can incorporate more information about each entry.
-Added entries for RTP tasks and services.
-Need to implement the tasks and services in RTP from config.vbs.
-A placeholder commit so I don't lose any of this stuff.
--------------------

--------------------
COMMIT - 9/22/2019
v0.8.3 - Working on RTP, getting closer to firing due tasks.

-v0.8.3.
-Real-Time-Protection should be pretty well standalone at this point.
-It detects when the main application is no longer running, and if "runInBackground" config entry is not set it will kill itself and all running tasks.
-Looking for a creative way to make a systray icon in VBS. Might have to have a tiny handler for this in Python. 
-Getting closer to implementing settings. Going to hard-code timers for the real-time core due tasks next. Eventually we can move on to implementing the settings.hta page.
--------------------